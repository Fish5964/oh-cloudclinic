<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.clinic.dao.ClinicVersionDao">
    
    <sql id="clinicVersionColumns">
        a.id AS "id",
        a.name AS "name",
        a.price AS "price",
        a.description AS "description",
        a.create_by AS "createBy",
        a.create_date AS "createDate",
        a.update_by AS "updateBy",
        a.update_date AS "updateDate",
        a.remarks AS "remarks",
        a.code AS "code",
        a.role_id AS "roleId",
        a.del_flag AS "delFlag"
    </sql>
    
    <sql id="clinicVersionJoins">
    </sql>
    
    <select id="get" resultType="com.geeke.clinic.entity.ClinicVersion">
        SELECT 
            <include refid="clinicVersionColumns"/>
        FROM clinic_version a
        <include refid="clinicVersionJoins"/>
        WHERE a.id = #{id}
    </select>
    
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM clinic_version a
        <include refid="clinicVersionJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
    </select>    
    
    <select id="listPage" resultType="com.geeke.clinic.entity.ClinicVersion">
        SELECT 
            <include refid="clinicVersionColumns"/>
        FROM clinic_version a
        <include refid="clinicVersionJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
        <choose>
            <when test="order != null and order != ''">
                ORDER BY ${order}
            </when>            
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
        LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <select id="listAll" resultType="com.geeke.clinic.entity.ClinicVersion">
        SELECT 
            <include refid="clinicVersionColumns"/>
        FROM clinic_version a
        <include refid="clinicVersionJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
        <choose>
            <when test="order != null and order != ''">
                ORDER BY ${order}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>
      
    <insert id="insert">
        INSERT INTO clinic_version(
            id,
            name,
            price,
            description,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag,
            role_id,
            code
        ) VALUES (
            #{id},
            #{name},
            #{price},
            #{description},
            #{createBy},
            #{createDate},
            #{updateBy},
            #{updateDate},
            #{remarks},
            #{delFlag},
            #{roleId},
            #{code}
        )
    </insert>
    
    <update id="update">
        UPDATE clinic_version SET     
            name = #{name},
            price = #{price},
            description = #{description},
            remarks = #{remarks},
            code = #{code}
        WHERE id = #{id}
    </update>
    
    <update id="delete">
        UPDATE clinic_version SET
            update_by = #{updateBy},
            update_date = #{updateDate},
            del_flag = #{DEL_FLAG_DELETE}
        WHERE id = #{id}
    </update>
        
    <insert id="bulkInsert" parameterType="java.util.List">
        INSERT INTO clinic_version(
            id,
            name,
            price,
            description,
            create_by,
            create_date,
            update_by,
            update_date,
            remarks,
            del_flag,
            role_id,
            code
        ) VALUES 
        <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
        (
            #{entity.id},
            #{entity.name},
            #{entity.price},
            #{entity.description},
            #{entity.createBy},
            #{entity.createDate},
            #{entity.updateBy},
            #{entity.updateDate},
            #{entity.remarks},
            #{entity.delFlag},
            #{roleId},
            #{code}
        )
        </foreach>
    </insert>
    
    <update id="bulkUpdate" parameterType="java.util.List">    
        UPDATE clinic_version
        <set>           
            <trim prefix="name=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.name}
                </foreach>
            </trim>
            <trim prefix="price=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.price}
                </foreach>
            </trim>
            <trim prefix="description=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.description}
                </foreach>
            </trim>
            <trim prefix="remarks=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.remarks}
                </foreach>
            </trim>
        </set>
        WHERE id IN
        <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
            #{entity.id}
        </foreach>
    </update>
    
    
    <update id="bulkDelete" parameterType="java.util.List">
        UPDATE clinic_version
        <set>
            <trim prefix="del_flag=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then 1
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_date=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateDate}
                </foreach>
            </trim>
        </set>
        WHERE id IN
        <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
            #{entity.id}
        </foreach>
    </update>
    
</mapper>