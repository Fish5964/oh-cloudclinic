<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.member.dao.MemberItemDao">
    
    <sql id="memberItemColumns">
        a.id AS "id",
        a.company_id AS "company.id",
        IFNULL(company.name,'') AS "company.name",
        a.member_id AS "member.id",
        IFNULL(member.name,'') AS "member.name",
        a.cost_item_id AS "costItem.id",
        a.number AS "number",
        a.create_by AS "createBy",
        a.create_date AS "createDate",
        a.update_by AS "updateBy",
        a.update_date AS "updateDate",
        a.del_flag AS "delFlag",
        a.use_number AS "useNumber"
    </sql>
    
    <sql id="memberItemJoins">
        LEFT JOIN org_company company ON company.id = a.company_id
        LEFT JOIN member_set member ON member.id = a.member_id
        LEFT JOIN cost_item costItem ON costItem.id = a.cost_item_id
    </sql>
    <delete id="deleteByMemberSet">
        delete from member_item where member_id=#{memberSetId}
    </delete>

    <select id="get" resultType="com.geeke.member.entity.MemberItem">
        SELECT 
            <include refid="memberItemColumns"/>
        FROM member_item a
        <include refid="memberItemJoins"/>
        WHERE a.id = #{id}
    </select>
    
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM member_item a
        <include refid="memberItemJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
    </select>    
    
    <select id="listPage" resultType="com.geeke.member.entity.MemberItem">
        SELECT 
            <include refid="memberItemColumns"/>
        FROM member_item a
        <include refid="memberItemJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
        <choose>
            <when test="order != null and order != ''">
                ORDER BY ${order}
            </when>            
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
        LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <select id="listAll" resultType="com.geeke.member.entity.MemberItem">
        SELECT 
            <include refid="memberItemColumns"/>
        FROM member_item a
        <include refid="memberItemJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
        <choose>
            <when test="order != null and order != ''">
                ORDER BY ${order}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>
    <select id="getByMemberSetId" resultType="com.geeke.member.entity.MemberItem">
        SELECT
           <include refid="memberItemColumns"/>
        FROM member_item a
           <include refid="memberItemJoins"/>
        WHERE a.member_id = #{memberSetId}
    </select>

    <insert id="insert">
        INSERT INTO member_item(
            id,
            company_id,
            member_id,
            cost_item_id,
            number,
            create_by,
            create_date,
            update_by,
            update_date,
            del_flag,
            use_number
        ) VALUES (
            #{id},
            #{company.id},                    
            #{member.id},                    
            #{costItem.id},                    
            #{number},
            #{createBy},
            #{createDate},
            #{updateBy},
            #{updateDate},
            #{delFlag},
            #{useNumber}
        )
    </insert>
    
    <update id="update">
        UPDATE member_item SET     
            company_id = #{company.id},                    
            member_id = #{member.id},                    
            cost_item_id = #{costItem.id},                    
            number = #{number},
            update_by = #{updateBy},
            update_date = #{updateDate},
            use_number = #{useNumber}
        WHERE id = #{id}
    </update>
    
    <update id="delete">
        UPDATE member_item SET
            update_by = #{updateBy},
            update_date = #{updateDate},
            del_flag = #{DEL_FLAG_DELETE}
        WHERE id = #{id}
    </update>
        
    <insert id="bulkInsert" parameterType="java.util.List">
        INSERT INTO member_item(
            id,
            company_id,
            member_id,
            cost_item_id,
            number,
            create_by,
            create_date,
            update_by,
            update_date,
            del_flag,
            use_number
        ) VALUES 
        <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
        (
            #{entity.id},
            #{entity.company.id},                    
            #{entity.member.id},                    
            #{entity.costItem.id},                    
            #{entity.number},
            #{entity.createBy},
            #{entity.createDate},
            #{entity.updateBy},
            #{entity.updateDate},
            #{entity.delFlag},
            #{entity.useNumber}
        )
        </foreach>
    </insert>
    
    <update id="bulkUpdate" parameterType="java.util.List">    
        UPDATE member_item
        <set>           
            <trim prefix="company_id=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.company.id}
                </foreach>
            </trim>
            <trim prefix="member_id=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.member.id}
                </foreach>
            </trim>
            <trim prefix="cost_item_id=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.costItem.id}
                </foreach>
            </trim>
            <trim prefix="number=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.number}
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_date=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateDate}
                </foreach>
            </trim>
        </set>
        WHERE id IN
        <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
            #{entity.id}
        </foreach>
    </update>
    
    
    <update id="bulkDelete" parameterType="java.util.List">
        UPDATE member_item
        <set>
            <trim prefix="del_flag=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then 1
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_date=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateDate}
                </foreach>
            </trim>
        </set>
        WHERE id IN
        <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
            #{entity.id}
        </foreach>
    </update>
    
</mapper>